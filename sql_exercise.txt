/*! https://www.w3schools.com/sql/exercise.asp  */

/*
Tablename	Records
===========================
Customers          92
Categories	        8
Employees	         10
OrderDetails	      518
Orders	            196
Products	          77
Shippers	          3
Suppliers	         29
*/

/*------LIKE Exercise-------*/
SELECT * FROM Customers
WHERE City LIKE '%a%'; /*Contains the letter 'a'*/

SELECT * FROM Customers
WHERE City LIKE '%a'; /*ends with the letter "a"*/

SELECT * FROM Customers
WHERE City = "Berlin";

SELECT * FROM Customers /*records where the value of the City column starts with letter "a" and ends with the letter "b".*/
WHERE City LIKE 'a%b';

SELECT * FROM Customers /*records where the value of the City column does NOT start with the letter "a".*/
WHERE City NOT LIKE 'a%';

/*-----Wild Card Exericse------*/
/*Select all records where the second letter of the City is an "a".*/
SELECT * FROM Customers
WHERE City LIKE '_a%';

/*Select all records where the first letter of the City is an "a" or a "c" or an "s".*/
SELECT * FROM Customers
WHERE City LIKE '[acs]%';

/*Select all records where the first letter of the City starts with anything from an "a" to an "f".*/
SELECT * FROM Customers
WHERE City LIKE '[a-f]%';

/*Select all records where the first letter of the City is NOT an "a" or a "c" or an "f".*/
SELECT * FROM Customers
WHERE City LIKE '[!acf]%';

/--------*SQL 'IN'------*/
/*Use the IN operator to select all the records where Country is either "Norway" or "France".*/
SELECT * FROM Customers
WHERE Country IN ('Germany','France');

/*Use the IN operator to select all the records where Country is NOT "Norway" and NOT "France".*/
SELECT * FROM Customers
WHERE Country NOT IN ('Norway', 'France');

/*--------INSERT Exercise*----/
INSERT INTO
 Customers( 
CustomerName,
ContactName,
Address, 
City, 
PostalCode,
Country
)
VALUES(
'Hekkan Burger',
'James Suckity',
'Gateveien 15',
'Sandnes',
'4306',
'Norway'
);

/*------MIN/MAX function----*/
SELECT MAX(Price)
FROM Products;

/*-----Functions part 2----*/
SELECT COUNT(*)
FROM Products
WHERE Price = 18;

/*-------BETWEEN----------*/
SELECT * FROM Products
WHERE Price BETWEEN 6 AND 9;

/*Use the BETWEEN operator to select all the records where the value of the Price column is NOT between 10 and 20.*/
SELECT * FROM Products
WHERE Price NOT BETWEEN 10 AND 20;

/*Use the BETWEEN operator to select all the records where the value of the ProductName column is alphabetically between 'Geitost' and 'Pavlova'.*/
SELECT * FROM Products
WHERE ProductName 
BETWEEN 'Geitost' AND 'Pavlova'
;

/**----ALIAS----*/
/*
SELECT column_name AS alias_name
FROM table_name;

SELECT CustomerID AS ID, CustomerName AS Customer
FROM Customers;

SELECT CustomerName, Address + ', ' + PostalCode + ' ' + City + ', ' + Country AS Address
FROM Customers;
*/

/*When displaying the Customers table, make an ALIAS of the PostalCode column, the column should be called Pno instead.*/

SELECT CustomerName,
Address,
PostalCode AS Pno /*AS Pno*/
FROM Customers;

/*When displaying the Customers table, refer to the table as Consumers instead of Customers.*/
SELECT *
FROM Customers AS Consumers;

/**----SQL JOIN----*/
Insert the missing parts in the JOIN clause to join the two tables Orders and Customers, using the CustomerID field in both tables as the relationship between the two tables.


SELECT *
FROM Orders
LEFT JOIN Customers
ON Orders.CustomerID = Customers.CustomerID;

/*https://www.w3schools.com/sql/sql_join.asp*/
/*
Different Types of SQL JOINs
Here are the different types of the JOINs in SQL:

(INNER) JOIN: Returns records that have matching values in both tables
LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table
RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table
FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table */

/*Choose the correct JOIN clause to select all the records from the Customers table plus all the matches in the Orders table.*/
SELECT *
FROM Orders
RIGHT JOIN Customers
ON Orders.CustomerID=Customers.CustomerID;


/*-----GROUP BY SQL-------------------*/
/*List the number of customers in each country.*/
SELECT COUNT(CustomerID),
Country
FROM Customers
GROUP BY Country;

/*List the number of customers in each country, ordered by the country with the most customers first.*/
SELECT COUNT (CustomerID),
Country
FROM Customers
GROUP BY Country
ORDER BY 
COUNT(CustomerID) DESC;
